library(httr)
library(rvest)
library(XML)
startpage <- "https://www.boligsiden.dk/postnummer/8230/vej/tousvej/tilsalg"
rawres <- GET(url=startpage)
rawres$status_code
startpage2 <- "https://www.boligsiden.dk/postnummer/8230/vej/tousevej/tilsalg"
rawres2 <- GET(url=startpage2)
rawres2$status_code
# This means that the I have to ensure that these two columns (and others are clean)
boligsiden_df <- na.omit(boligsiden)
summary(boligsiden_df$postnr)
# Need to remove non-valid postcodes
lv_postnr <- boligsiden_df$postnr < 1000
boligsiden_df <- boligsiden_df[!lv_postnr,]
summary(boligsiden_df$postnr)
row.names(boligsiden_df) <- NULL
#### write the loop
status_list <- c()
for (i in 1:100) {
startpage_loop <- paste0("https://www.boligsiden.dk/postnummer/",boligsiden_df$postnr[i],"/vej/", boligsiden_df$vej[i],"/tilsalg", collapse="")
rawres_loop <- GET(url=startpage_loop)
status <- rawres_loop$status_code
status_list <- rbind(status_list, status)
}
# summary - Min.,1st Qu.,Median,Mean,3rd Qu.,Max.
# Standard deviation
# Plot
library(stringr)
library(dplyr)
library(corrplot)
library(ggplot2)
library(reshape2)
boligsiden_df$pris <- as.numeric(gsub("[^0-9]", "",boligsiden_df$pris))
lv_pris <- boligsiden_df$pris > 10000000
boligsiden_df <- boligsiden_df[!lv_pris,]
sd_pris <- sd(boligsiden_df$pris)
boligsiden_df$kvmpris <- boligsiden_df$kvmpris *1000
boxplot(boligsiden_df$kvmpris)
lv_kvmpris <- boligsiden_df$kvmpris > 60000
boligsiden_df <- boligsiden_df[!lv_kvmpris,]
sd_kvmpris <- sd(boligsiden_df$kvmpris)
lv_stl <- boligsiden_df$størrelse < 20 | boligsiden_df$størrelse > 300
boligsiden_df <- boligsiden_df[!lv_stl,]
sd_stl <- sd(boligsiden_df$størrelse)
boligsiden_df$mdudg <-  boligsiden_df$mdudg * 1000
boxplot(boligsiden_df$mdudg)
lv_mdudg <- boligsiden_df$mdudg > 6000
boligsiden_df <- boligsiden_df[!lv_mdudg,]
sd_mdudg <- sd(boligsiden_df$mdudg)
boligsiden_df <- boligsiden_df %>%
mutate(
extracted_value = ifelse(
!is.na(str_extract(grund, "^\\d{3}")),   # Check if extraction is not NA
str_extract(grund, "^\\d{3}"),           # Extract first 3 digits
ifelse(
!is.na(str_extract(grund, "^\\d{2}")),   # Check if extraction is not NA
str_extract(grund, "^\\d{2}"),           # Extract first 3 digits
grund * 1000                             # Keep the original value but remove the decimal
)
))
boligsiden_df$grund <- as.numeric(boligsiden_df$extracted_value)
boligsiden_df <- boligsiden_df[,-c(13)]
lv_grund <- boligsiden_df$grund > 1600 | boligsiden_df$grund < 100
boligsiden_df <- boligsiden_df[!lv_grund,]
sd_grund <- sd(boligsiden_df$grund)
#### liggetid
boligsiden_df$liggetid <- as.numeric(str_extract(boligsiden_df$liggetid, "^\\d+"))
summary(boligsiden_df$liggetid)
sd_tid <- sd(boligsiden_df$liggetid)
# opført
boligsiden_df$alder <- 2024 - boligsiden_df$opført
summary(boligsiden_df$alder)
sd_alder <- sd(boligsiden_df$alder)
###################Opgave 2.2 - Korrelation
#Hvad er korrelationen mellem m2 og prisen for boliger lagt på boligsiden.dk?
cor_m2_pris <- cor(data.frame(kvm=boligsiden_df$størrelse,
pris=boligsiden_df$pris))
melted_cor_m2_pris <- melt(cor_m2_pris)
ggplot(melted_cor_m2_pris, aes(Var1, Var2, fill = value)) +
geom_tile() +
geom_text(aes(label = round(value, 2)), color = "black", size = 10) +
scale_fill_gradient2(low = "red", high = "green", mid = "white",
midpoint = 0, limit = c(-1, 1), name = "Correlation") +
theme_minimal() +
labs(x = "", y = "") +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1, size= 15)) +
theme(axis.text.y = element_text(size= 15))
###################Opgave 2.3 – Simple regressioner
#Lav minimum 5 simple regressioner mellem pris pr. m2 og 5 andre variable i csv-filen fra opgave 1.
#Giv en forklaring på, hvilken af de fem modeller, der bedst forklarer pris pr. m2.
#Derudover skal I understøtte jeres 5 modeller med et bud på om, der er sammenhæng (korrelation) mellem jeres 5 udvalgte variable (hint: lav en korrelationsmatrix).
model_mdudg <- lm(kvmpris ~ mdudg, data=boligsiden_df)
summary(model_mdudg)
model_grund <- lm(kvmpris ~ grund, data=boligsiden_df)
summary(model_grund)
model_liggetid <- lm(kvmpris ~ liggetid, data=boligsiden_df)
summary(model_liggetid)
model_alder <- lm(kvmpris ~ alder, data=boligsiden_df)
summary(model_alder)
### correlation caluclations
cor_boligsiden <- cor(data.frame(
kvmpris=boligsiden_df$kvmpris,
mdudg=boligsiden_df$mdudg,
grund=boligsiden_df$grund,
liggetid=boligsiden_df$liggetid,
alder=boligsiden_df$alder))
melted_cor_boligsiden <- melt(cor_boligsiden)
ggplot(melted_cor_boligsiden, aes(Var1, Var2, fill = value)) +
geom_tile() +
geom_text(aes(label = round(value, 2)), color = "black", size = 10) +
scale_fill_gradient2(low = "red", high = "green", mid = "white",
midpoint = 0, limit = c(-1, 1), name = "Correlation") +
theme_minimal() +
labs(x = "", y = "") +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1)) +
theme(axis.text.y = element_text(size= 15))
View(boligsiden_df)
boxplot(boligsiden_df$pris)
boxplot(boligsiden_df$kvmpris)
View(boligsiden_df)
boxplot(boligsiden_df$størrelse)
boxplot(boligsiden_df$mdudg)
boxplot(boligsiden_df$grund)
boligsiden_2_huse <- boligsiden[c(71,2202),]
View(boligsiden_2_huse)
View(boligsiden)
View(boligsiden_df)
# summary - Min.,1st Qu.,Median,Mean,3rd Qu.,Max.
# Standard deviation
# Plot
library(stringr)
library(dplyr)
library(corrplot)
library(ggplot2)
library(reshape2)
#### Pris
summary(boligsiden_df$pris)
boxplot(boligsiden_df$pris)
options(scipen = 999)
boxplot(boligsiden_df$pris)
lv_pris <- boligsiden_df$pris > 7000000
boligsiden_df <- boligsiden_df[!lv_pris,]
sd_pris <- sd(boligsiden_df$pris)
boxplot(boligsiden_df$pris)
#### Pris
summary(boligsiden_df$pris)
boxplot(boligsiden_df$pris)
lv_pris <- boligsiden_df$pris > 7000000
boligsiden_df <- boligsiden_df[!lv_pris,]
sd_pris <- sd(boligsiden_df$pris)
#### Pris
summary(boligsiden_df$pris)
#### kvmpris - lots of problems converting the values to numeric without .
summary(boligsiden_df$kvmpris)
boxplot(boligsiden_df$kvmpris)
lv_kvmpris <- boligsiden_df$kvmpris > 40000
boligsiden_df <- boligsiden_df[!lv_kvmpris,]
boxplot(boligsiden_df$kvmpris)
sd_kvmpris <- sd(boligsiden_df$kvmpris)
#### kvmpris - lots of problems converting the values to numeric without .
summary(boligsiden_df$kvmpris)
lv_kvmpris <- boligsiden_df$kvmpris > 38000
boligsiden_df <- boligsiden_df[!lv_kvmpris,]
boxplot(boligsiden_df$kvmpris)
sd_kvmpris <- sd(boligsiden_df$kvmpris)
#### størrelse
summary(boligsiden_df$størrelse)
boxplot(boligsiden_df$størrelse)
lv_stl <- boligsiden_df$størrelse < 20 | boligsiden_df$størrelse > 250
boligsiden_df <- boligsiden_df[!lv_stl,]
boxplot(boligsiden_df$størrelse)
lv_stl <- boligsiden_df$størrelse < 20 | boligsiden_df$størrelse > 240
boligsiden_df <- boligsiden_df[!lv_stl,]
boxplot(boligsiden_df$størrelse)
# This means that the I have to ensure that these two columns (and others are clean)
boligsiden_df <- na.omit(boligsiden)
# Need to remove non-valid postcodes
lv_postnr <- boligsiden_df$postnr < 1000
boligsiden_df <- boligsiden_df[!lv_postnr,]
summary(boligsiden_df$postnr)
row.names(boligsiden_df) <- NULL
#### Pris
summary(boligsiden_df$pris)
boligsiden_df$pris <- as.numeric(gsub("[^0-9]", "",boligsiden_df$pris))
boxplot(boligsiden_df$pris)
lv_pris <- boligsiden_df$pris > 7000000
boligsiden_df <- boligsiden_df[!lv_pris,]
boxplot(boligsiden_df$pris)
lv_pris <- boligsiden_df$pris > 6900000
boligsiden_df <- boligsiden_df[!lv_pris,]
boxplot(boligsiden_df$pris)
boligsiden_df <- boligsiden_df[!lv_pris,]
sd_pris <- sd(boligsiden_df$pris)
#### Pris
summary(boligsiden_df$pris)
# This means that the I have to ensure that these two columns (and others are clean)
boligsiden_df <- na.omit(boligsiden)
library(skim)
skim(boligsiden_df)
library(skimr)
skim(boligsiden_df)
summary(boligsiden_df$postnr)
# Need to remove non-valid postcodes
lv_postnr <- boligsiden_df$postnr < 1000
boligsiden_df <- boligsiden_df[!lv_postnr,]
summary(boligsiden_df$postnr)
row.names(boligsiden_df) <- NULL
#### Pris
summary(boligsiden_df$pris)
boligsiden_df$pris <- as.numeric(gsub("[^0-9]", "",boligsiden_df$pris))
boxplot(boligsiden_df$pris)
lv_pris <- boligsiden_df$pris > 6900000
boligsiden_df <- boligsiden_df[!lv_pris,]
sd_pris <- sd(boligsiden_df$pris)
boxplot(boligsiden_df$pris)
#### kvmpris - lots of problems converting the values to numeric without .
summary(boligsiden_df$kvmpris)
boligsiden_df$kvmpris <- boligsiden_df$kvmpris *1000
boxplot(boligsiden_df$kvmpris)
lv_kvmpris <- boligsiden_df$kvmpris > 38000
boligsiden_df <- boligsiden_df[!lv_kvmpris,]
sd_kvmpris <- sd(boligsiden_df$kvmpris)
boxplot(boligsiden_df$kvmpris)
lv_kvmpris <- boligsiden_df$kvmpris > 37000
boligsiden_df <- boligsiden_df[!lv_kvmpris,]
boxplot(boligsiden_df$kvmpris)
lv_kvmpris <- boligsiden_df$kvmpris > 36000
boligsiden_df <- boligsiden_df[!lv_kvmpris,]
boxplot(boligsiden_df$kvmpris)
sd_kvmpris <- sd(boligsiden_df$kvmpris)
# This means that the I have to ensure that these two columns (and others are clean)
boligsiden_df <- na.omit(boligsiden)
skim(boligsiden_df)
# Need to remove non-valid postcodes
lv_postnr <- boligsiden_df$postnr < 1000
boligsiden_df <- boligsiden_df[!lv_postnr,]
summary(boligsiden_df$postnr)
row.names(boligsiden_df) <- NULL
#### Pris
summary(boligsiden_df$pris)
boligsiden_df$pris <- as.numeric(gsub("[^0-9]", "",boligsiden_df$pris))
boxplot(boligsiden_df$pris)
lv_pris <- boligsiden_df$pris > 7000000
boligsiden_df <- boligsiden_df[!lv_pris,]
sd_pris <- sd(boligsiden_df$pris)
boxplot(boligsiden_df$pris)
#### kvmpris - lots of problems converting the values to numeric without .
summary(boligsiden_df$kvmpris)
boligsiden_df$kvmpris <- boligsiden_df$kvmpris *1000
boxplot(boligsiden_df$kvmpris)
lv_kvmpris <- boligsiden_df$kvmpris > 40000
boligsiden_df <- boligsiden_df[!lv_kvmpris,]
sd_kvmpris <- sd(boligsiden_df$kvmpris)
boxplot(boligsiden_df$kvmpris)
#### størrelse
summary(boligsiden_df$størrelse)
boxplot(boligsiden_df$størrelse)
lv_stl <- boligsiden_df$størrelse < 20 | boligsiden_df$størrelse > 240
boligsiden_df <- boligsiden_df[!lv_stl,]
sd_stl <- sd(boligsiden_df$størrelse)
boxplot(boligsiden_df$størrelse)
# This means that the I have to ensure that these two columns (and others are clean)
boligsiden_df <- na.omit(boligsiden)
# Need to remove non-valid postcodes
lv_postnr <- boligsiden_df$postnr < 1000
boligsiden_df <- boligsiden_df[!lv_postnr,]
summary(boligsiden_df$postnr)
row.names(boligsiden_df) <- NULL
summary(boligsiden_df$pris)
boligsiden_df$pris <- as.numeric(gsub("[^0-9]", "",boligsiden_df$pris))
boxplot(boligsiden_df$pris)
lv_pris <- boligsiden_df$pris > 7000000
boligsiden_df <- boligsiden_df[!lv_pris,]
sd_pris <- sd(boligsiden_df$pris)
#### kvmpris - lots of problems converting the values to numeric without .
summary(boligsiden_df$kvmpris)
boligsiden_df$kvmpris <- boligsiden_df$kvmpris *1000
boxplot(boligsiden_df$kvmpris)
lv_kvmpris <- boligsiden_df$kvmpris > 40000
boligsiden_df <- boligsiden_df[!lv_kvmpris,]
sd_kvmpris <- sd(boligsiden_df$kvmpris)
boxplot(boligsiden_df$kvmpris)
#### størrelse
summary(boligsiden_df$størrelse)
boxplot(boligsiden_df$størrelse)
lv_stl <- boligsiden_df$størrelse < 20 | boligsiden_df$størrelse > 250
lv_stl <- boligsiden_df$størrelse < 20 | boligsiden_df$størrelse > 300
boligsiden_df <- boligsiden_df[!lv_stl,]
sd_stl <- sd(boligsiden_df$størrelse)
boxplot(boligsiden_df$størrelse)
#### mdudg
summary(boligsiden_df$mdudg)
boligsiden_df$mdudg <-  boligsiden_df$mdudg * 1000
boxplot(boligsiden_df$mdudg)
lv_mdudg <- boligsiden_df$mdudg > 6000
boligsiden_df <- boligsiden_df[!lv_mdudg,]
sd_mdudg <- sd(boligsiden_df$mdudg)
boxplot(boligsiden_df$mdudg)
lv_mdudg <- boligsiden_df$mdudg > 5800
boligsiden_df <- boligsiden_df[!lv_mdudg,]
sd_mdudg <- sd(boligsiden_df$mdudg)
boxplot(boligsiden_df$mdudg)
#### grund
summary(boligsiden_df$grund)
boligsiden_df <- boligsiden_df %>%
mutate(
extracted_value = ifelse(
!is.na(str_extract(grund, "^\\d{3}")),   # Check if extraction is not NA
str_extract(grund, "^\\d{3}"),           # Extract first 3 digits
ifelse(
!is.na(str_extract(grund, "^\\d{2}")),   # Check if extraction is not NA
str_extract(grund, "^\\d{2}"),           # Extract first 3 digits
grund * 1000                             # Keep the original value but remove the decimal
)
))
boligsiden_df$grund <- as.numeric(boligsiden_df$extracted_value)
boligsiden_df <- boligsiden_df[,-c(13)]
boxplot(boligsiden_df$grund)
lv_grund <- boligsiden_df$grund > 1600 | boligsiden_df$grund < 100
boligsiden_df <- boligsiden_df[!lv_grund,]
sd_grund <- sd(boligsiden_df$grund)
boxplot(boligsiden_df$grund)
lv_grund <- boligsiden_df$grund > 1600 | boligsiden_df$grund < 150
boligsiden_df <- boligsiden_df[!lv_grund,]
boxplot(boligsiden_df$grund)
View(boligsiden_df)
# This means that the I have to ensure that these two columns (and others are clean)
boligsiden_df <- na.omit(boligsiden)
# Need to remove non-valid postcodes
lv_postnr <- boligsiden_df$postnr < 1000
boligsiden_df <- boligsiden_df[!lv_postnr,]
summary(boligsiden_df$postnr)
row.names(boligsiden_df) <- NULL
#### Pris
summary(boligsiden_df$pris)
boligsiden_df$pris <- as.numeric(gsub("[^0-9]", "",boligsiden_df$pris))
#### Pris
summary(boligsiden_df$pris)
#### kvmpris - lots of problems converting the values to numeric without .
summary(boligsiden_df$kvmpris)
boligsiden_df$kvmpris <- boligsiden_df$kvmpris *1000
#### kvmpris - lots of problems converting the values to numeric without .
summary(boligsiden_df$kvmpris)
#### størrelse
summary(boligsiden_df$størrelse)
#### mdudg
summary(boligsiden_df$mdudg)
#### Pris
summary(boligsiden_df$pris)
sd_pris <- sd(boligsiden_df$pris)
#### kvmpris - lots of problems converting the values to numeric without .
summary(boligsiden_df$kvmpris)
sd_kvmpris <- sd(boligsiden_df$kvmpris)
#### størrelse
summary(boligsiden_df$størrelse)
sd_stl <- sd(boligsiden_df$størrelse)
boligsiden_df$mdudg <-  boligsiden_df$mdudg * 1000
#### mdudg
summary(boligsiden_df$mdudg)
sd_mdudg <- sd(boligsiden_df$mdudg)
boligsiden_df <- boligsiden_df %>%
mutate(
extracted_value = ifelse(
!is.na(str_extract(grund, "^\\d{3}")),   # Check if extraction is not NA
str_extract(grund, "^\\d{3}"),           # Extract first 3 digits
ifelse(
!is.na(str_extract(grund, "^\\d{2}")),   # Check if extraction is not NA
str_extract(grund, "^\\d{2}"),           # Extract first 3 digits
grund * 1000                             # Keep the original value but remove the decimal
)
))
#### grund
summary(boligsiden_df$grund)
boligsiden_df <- boligsiden_df %>%
mutate(
extracted_value = ifelse(
!is.na(str_extract(grund, "^\\d{3}")),   # Check if extraction is not NA
str_extract(grund, "^\\d{3}"),           # Extract first 3 digits
ifelse(
!is.na(str_extract(grund, "^\\d{2}")),   # Check if extraction is not NA
str_extract(grund, "^\\d{2}"),           # Extract first 3 digits
grund * 1000                             # Keep the original value but remove the decimal
)
))
boligsiden_df$grund <- as.numeric(boligsiden_df$extracted_value)
boligsiden_df <- boligsiden_df[,-c(13)]
#### grund
summary(boligsiden_df$grund)
#### liggetid
boligsiden_df$liggetid <- as.numeric(str_extract(boligsiden_df$liggetid, "^\\d+"))
summary(boligsiden_df$liggetid)
# opført
boligsiden_df$alder <- 2024 - boligsiden_df$opført
summary(boligsiden_df$alder)
sd_tid <- sd(boligsiden_df$liggetid)
sd_grund <- sd(boligsiden_df$grund)
sd_mdudg <- sd(boligsiden_df$mdudg)
summary(boligsiden_df$liggetid)
sd_tid <- sd(boligsiden_df$liggetid)
# opført
boligsiden_df$alder <- 2024 - boligsiden_df$opført
summary(boligsiden_df$alder)
sd_alder <- sd(boligsiden_df$alder)
###################Opgave 2.2 - Korrelation
#Hvad er korrelationen mellem m2 og prisen for boliger lagt på boligsiden.dk?
cor_m2_pris <- cor(data.frame(kvm=boligsiden_df$størrelse,
pris=boligsiden_df$pris))
melted_cor_m2_pris <- melt(cor_m2_pris)
ggplot(melted_cor_m2_pris, aes(Var1, Var2, fill = value)) +
geom_tile() +
geom_text(aes(label = round(value, 2)), color = "black", size = 10) +
scale_fill_gradient2(low = "red", high = "green", mid = "white",
midpoint = 0, limit = c(-1, 1), name = "Correlation") +
theme_minimal() +
labs(x = "", y = "") +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1, size= 15)) +
theme(axis.text.y = element_text(size= 15))
ggplot(melted_cor_m2_pris, aes(Var1, Var2, fill = value)) +
geom_tile() +
geom_text(aes(label = round(value, 2)), color = "black", size = 10) +
scale_fill_gradient2(low = "red", high = "green", mid = "white",
midpoint = 0, limit = c(-1, 1), name = "Correlation") +
theme_minimal() +
labs(x = "", y = "", title="Kvm og pris er positivt korrelaret") +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1, size= 15)) +
theme(axis.text.y = element_text(size= 15))
lv_pris <- boligsiden_df$pris > 7000000
boligsiden_df <- boligsiden_df[!lv_pris,]
boxplot(boligsiden_df$pris)
lv_kvmpris <- boligsiden_df$kvmpris > 40000
boligsiden_df <- boligsiden_df[!lv_kvmpris,]
boxplot(boligsiden_df$kvmpris)
lv_stl <- boligsiden_df$størrelse < 20 | boligsiden_df$størrelse > 300
boligsiden_df <- boligsiden_df[!lv_stl,]
boxplot(boligsiden_df$størrelse)
lv_stl <- boligsiden_df$størrelse < 50 | boligsiden_df$størrelse > 250
boligsiden_df <- boligsiden_df[!lv_stl,]
boxplot(boligsiden_df$størrelse)
lv_kvmpris <- boligsiden_df$kvmpris > 38000
boligsiden_df <- boligsiden_df[!lv_kvmpris,]
boxplot(boligsiden_df$kvmpris)
boxplot(boligsiden_df$mdudg)
lv_mdudg <- boligsiden_df$mdudg > 10000
boligsiden_df <- boligsiden_df[!lv_mdudg,]
boxplot(boligsiden_df$mdudg)
lv_mdudg <- boligsiden_df$mdudg > 8000
boligsiden_df <- boligsiden_df[!lv_mdudg,]
boxplot(boligsiden_df$mdudg)
boxplot(boligsiden_df$grund)
lv_grund <- boligsiden_df$grund > 1600 | boligsiden_df$grund < 150
boligsiden_df <- boligsiden_df[!lv_grund,]
boxplot(boligsiden_df$grund)
###################Opgave 2.3 – Simple regressioner
#Lav minimum 5 simple regressioner mellem pris pr. m2 og 5 andre variable i csv-filen fra opgave 1.
#Giv en forklaring på, hvilken af de fem modeller, der bedst forklarer pris pr. m2.
#Derudover skal I understøtte jeres 5 modeller med et bud på om, der er sammenhæng (korrelation) mellem jeres 5 udvalgte variable (hint: lav en korrelationsmatrix).
model_mdudg <- lm(kvmpris ~ mdudg, data=boligsiden_df)
summary(model_mdudg)
model_grund <- lm(kvmpris ~ grund, data=boligsiden_df)
summary(model_grund)
model_liggetid <- lm(kvmpris ~ liggetid, data=boligsiden_df)
summary(model_liggetid)
model_alder <- lm(kvmpris ~ alder, data=boligsiden_df)
summary(model_alder)
### correlation calculations
cor_boligsiden <- cor(data.frame(
kvmpris=boligsiden_df$kvmpris,
mdudg=boligsiden_df$mdudg,
grund=boligsiden_df$grund,
liggetid=boligsiden_df$liggetid,
alder=boligsiden_df$alder))
melted_cor_boligsiden <- melt(cor_boligsiden)
ggplot(melted_cor_boligsiden, aes(Var1, Var2, fill = value)) +
geom_tile() +
geom_text(aes(label = round(value, 2)), color = "black", size = 10) +
scale_fill_gradient2(low = "red", high = "green", mid = "white",
midpoint = 0, limit = c(-1, 1), name = "Correlation") +
theme_minimal() +
labs(x = "", y = "") +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1)) +
theme(axis.text.y = element_text(size= 15))
ggplot(melted_cor_boligsiden, aes(Var1, Var2, fill = value)) +
geom_tile() +
geom_text(aes(label = round(value, 2)), color = "black", size = 10) +
scale_fill_gradient2(low = "red", high = "green", mid = "white",
midpoint = 0, limit = c(-1, 1), name = "Correlation") +
theme_minimal() +
labs(x = "", y = "") +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1)) +
theme(axis.text.y = element_text(size= 10))
ggplot(melted_cor_boligsiden, aes(Var1, Var2, fill = value)) +
geom_tile() +
geom_text(aes(label = round(value, 2)), color = "black", size = 10) +
scale_fill_gradient2(low = "red", high = "green", mid = "white",
midpoint = 0, limit = c(-1, 1), name = "Correlation") +
theme_minimal() +
labs(x = "", y = "") +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1)) +
theme(axis.text.y = element_text(size= 15)) +
theme(axis.text.x = element_text(size= 15))
summary(model_mdudg)
summary(model_grund)
summary(model_liggetid)
summary(model_alder)
View(df)
View(df2)
df_pivoted
View(df_pivoted)
View(boligsiden_df)
#####
saveRDS(boligsiden_df,"Boligsiden_renset.rds")
